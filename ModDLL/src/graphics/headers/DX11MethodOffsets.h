namespace MO_ID3D11Device {
    int QueryInterface = 0;
    int AddRef = 1;
    int Release = 2;
    int CreateBuffer = 3;
    int CreateTexture1D = 4;
    int CreateTexture2D = 5;
    int CreateTexture3D = 6;
    int CreateShaderResourceView = 7;
    int CreateUnorderedAccessView = 8;
    int CreateRenderTargetView = 9;
    int CreateDepthStencilView = 10;
    int CreateInputLayout = 11;
    int CreateVertexShader = 12;
    int CreateGeometryShader = 13;
    int CreateGeometryShaderWithStreamOutput = 14;
    int CreatePixelShader = 15;
    int CreateHullShader = 16;
    int CreateDomainShader = 17;
    int CreateComputeShader = 18;
    int CreateClassLinkage = 19;
    int CreateBlendState = 20;
    int CreateDepthStencilState = 21;
    int CreateRasterizerState = 22;
    int CreateSamplerState = 23;
    int CreateQuery = 24;
    int CreatePredicate = 25;
    int CreateCounter = 26;
    int CreateDeferredContext = 27;
    int OpenSharedResource = 28;
    int CheckFormatSupport = 29;
    int CheckMultisampleQualityLevels = 30;
    int CheckCounterInfo = 31;
    int CheckCounter = 32;
    int CheckFeatureSupport = 33;
    int GetPrivateData = 34;
    int SetPrivateData = 35;
    int SetPrivateDataInterface = 36;
    int GetFeatureLevel = 37;
    int GetCreationFlags = 38;
    int GetDeviceRemovedReason = 39;
    int GetImmediateContext = 40;
    int SetExceptionMode = 41;
    int GetExceptionMode = 42;
}

namespace MO_IDXGISwapChain {
    int QueryInterface = 0;
    int AddRef = 1;
    int Release = 2;
    int SetPrivateData = 3;
    int SetPrivateDataInterface = 4;
    int GetPrivateData = 5;
    int GetParent = 6;
    int GetDevice = 7;
    int Present = 8;
    int GetBuffer = 9;
    int SetFullscreenState = 10;
    int GetFullscreenState = 11;
    int GetDesc = 12;
    int ResizeBuffers = 13;
    int ResizeTarget = 14;
    int GetContainingOutput = 15;
    int GetFrameStatistics = 16;
    int GetLastPresentCount = 17;
}

namespace MO_ID3D11DeviceContext {
    int QueryInterface = 0;
    int AddRef = 1;
    int Release = 2;
    int GetDevice = 3;
    int GetPrivateData = 4;
    int SetPrivateData = 5;
    int SetPrivateDataInterface = 6;
    int VSSetConstantBuffers = 7;
    int PSSetShaderResources = 8;
    int PSSetShader = 9;
    int PSSetSamplers = 10;
    int VSSetShader = 11;
    int DrawIndexed = 12;
    int Draw = 13;
    int Map = 14;
    int Unmap = 15;
    int PSSetConstantBuffers = 16;
    int IASetInputLayout = 17;
    int IASetVertexBuffers = 18;
    int IASetIndexBuffer = 19;
    int DrawIndexedInstanced = 20;
    int DrawInstanced = 21;
    int GSSetConstantBuffers = 22;
    int GSSetShader = 23;
    int IASetPrimitiveTopology = 24;
    int VSSetShaderResources = 25;
    int VSSetSamplers = 26;
    int Begin = 27;
    int End = 28;
    int GetData = 29;
    int SetPredication = 30;
    int GSSetShaderResources = 31;
    int GSSetSamplers = 32;
    int OMSetRenderTargets = 33;
    int OMSetRenderTargetsAndUnorderedAccessViews = 34;
    int OMSetBlendState = 35;
    int OMSetDepthStencilState = 36;
    int SOSetTargets = 37;
    int DrawAuto = 38;
    int DrawIndexedInstancedIndirect = 39;
    int DrawInstancedIndirect = 40;
    int Dispatch = 41;
    int DispatchIndirect = 42;
    int RSSetState = 43;
    int RSSetViewports = 44;
    int RSSetScissorRects = 45;
    int CopySubresourceRegion = 46;
    int CopyResource = 47;
    int UpdateSubresource = 48;
    int CopyStructureCount = 49;
    int ClearRenderTargetView = 50;
    int ClearUnorderedAccessViewUint = 51;
    int ClearUnorderedAccessViewFloat = 52;
    int ClearDepthStencilView = 53;
    int GenerateMips = 54;
    int SetResourceMinLOD = 55;
    int GetResourceMinLOD = 56;
    int ResolveSubresource = 57;
    int ExecuteCommandList = 58;
    int HSSetShaderResources = 59;
    int HSSetShader = 60;
    int HSSetSamplers = 61;
    int HSSetConstantBuffers = 62;
    int DSSetShaderResources = 63;
    int DSSetShader = 64;
    int DSSetSamplers = 65;
    int DSSetConstantBuffers = 66;
    int CSSetShaderResources = 67;
    int CSSetUnorderedAccessViews = 68;
    int CSSetShader = 69;
    int CSSetSamplers = 70;
    int CSSetConstantBuffers = 71;
    int VSGetConstantBuffers = 72;
    int PSGetShaderResources = 73;
    int PSGetShader = 74;
    int PSGetSamplers = 75;
    int VSGetShader = 76;
    int PSGetConstantBuffers = 77;
    int IAGetInputLayout = 78;
    int IAGetVertexBuffers = 79;
    int IAGetIndexBuffer = 80;
    int GSGetConstantBuffers = 81;
    int GSGetShader = 82;
    int IAGetPrimitiveTopology = 83;
    int VSGetShaderResources = 84;
    int VSGetSamplers = 85;
    int GetPredication = 86;
    int GSGetShaderResources = 87;
    int GSGetSamplers = 88;
    int OMGetRenderTargets = 89;
    int OMGetRenderTargetsAndUnorderedAccessViews = 90;
    int OMGetBlendState = 91;
    int OMGetDepthStencilState = 92;
    int SOGetTargets = 93;
    int RSGetState = 94;
    int RSGetViewports = 95;
    int RSGetScissorRects = 96;
    int HSGetShaderResources = 97;
    int HSGetShader = 98;
    int HSGetSamplers = 99;
    int HSGetConstantBuffers = 100;
    int DSGetShaderResources = 101;
    int DSGetShader = 102;
    int DSGetSamplers = 103;
    int DSGetConstantBuffers = 104;
    int CSGetShaderResources = 105;
    int CSGetUnorderedAccessViews = 106;
    int CSGetShader = 107;
    int CSGetSamplers = 108;
    int CSGetConstantBuffers = 109;
    int ClearState = 110;
    int Flush = 111;
    int GetType = 112;
    int GetContextFlags = 113;
    int FinishCommandList = 114;
}